{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"proxyworker.js","sourcesContent":["export class ProxyWorker {\n  constructor(worker) {\n    this.worker = worker;\n    this.nextMessageId = 0;\n    this.workerReady = this._connectToWorker();\n  }\n\n  async callWithArgs(method, args) {\n    let worker = this.worker;\n    let messageId = this.nextMessageId++;\n\n    await this.workerReady;\n\n    worker.postMessage({\n      messageId: messageId,\n      method: method,\n      args: args\n    });\n\n    return new Promise((accept, reject) => {\n      worker.addEventListener('message', function onmessage(event) {\n        let data = event.data;\n        if (data.messageId !== messageId) {\n          // This response is for someone else.\n          return;\n        }\n\n        // Stop listening for our response since we've already received it.\n        worker.removeEventListener('message', onmessage);\n\n        if (data.errorMsg)\n          return reject(new Error(data.errorMsg));\n\n        accept(data.response);\n      });\n    });\n  }\n\n  _connectToWorker() {\n    let worker = this.worker;\n    let timeout;\n\n    function pollWorker() {\n      worker.postMessage('ping');\n      timeout = setTimeout(pollWorker, 50);\n    }\n\n    timeout = setTimeout(pollWorker, 0);\n\n    return new Promise(accept => {\n      worker.addEventListener('message', function onmessage(event) {\n        let data = event.data;\n        if (data === 'pong') {\n          worker.removeEventListener('message', onmessage);\n          clearTimeout(timeout);\n          accept();\n        }\n      });\n    });\n  }\n}\n\nexport function proxy(api) {\n  self.addEventListener('message', async function onmessage(event) {\n    let data = event.data;\n\n    if (data === 'ping') {\n      // Initial connection\n      return self.postMessage('pong');\n    }\n\n    let messageId = data.messageId;\n    let method = data.method;\n\n    if (!(method in api)) {\n      return sendError(messageId, `${method} not implemented by worker`);\n    }\n\n    let args = data.args;\n    let result;\n    try {\n      result = api[method].apply(null, args);\n    } catch (error) {\n      return sendError(messageId, error.message);\n    }\n\n    if (isPromise(result)) {\n      try {\n        result = await result;\n      } catch (error) {\n        return sendError(messageId, error.message);\n      }\n    }\n\n    sendResponse(messageId, result);\n  });\n}\n\nfunction sendResponse(messageId, response) {\n  self.postMessage({ messageId: messageId, response: response });\n}\n\nfunction sendError(messageId, errorMsg) {\n  self.postMessage({ messageId: messageId, errorMsg: errorMsg });\n}\n\n// See https://promisesaplus.com/\nfunction isPromise(maybePromise) {\n  switch (typeof maybePromise) {\n    case 'function':\n    case 'object':\n      break;\n    default:\n      return false;\n  }\n\n  return typeof maybePromise.then === 'function';\n}\n"]}